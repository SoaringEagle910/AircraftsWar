@startuml
'https://plantuml.com/class-diagram

abstract class AbstractEnemyAircraft {
  - propSpeedX: int
  - propSpeedY: int

  + AbstractEnemyAircraft(double locationX, double locationY, double speedX, double speedY, int hp, int shootNum, int power, int direction, int bulletSpeed
  + dropProp(): List<BaseProp>
  + shoot(): List<BaseBullet>
  + getScore(): int
}



class Boss {
  - bossMusicThread: AlwaysMusicThread
  - score:int

  + Boss(double locationX, double locationY, double speedX, double speedY, int hp,int shootNum,int power,int direction,int bulletspeed)
  + forward(): void
  + musicStop(): void
  + shoot(): List<BaseBullet>
  + getScore(): int
  + vanish(): void
  + update(int power): void
}


class EliteEnemy{
  - score: int

  + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shootNum,int power,int direction,int bulletspeed)
  + forward(): void
  + shoot(): List<BaseBullet>
  + getScore(): int
  + update(int power): void
}

class ElitePlus{
  - score: int

  + ElitePlus(int locationX, int locationY, int speedX, int speedY, int hp,int shootNum,int power,int direction,int bulletspeed)
  + forward(): void
  + shoot(): List<BaseBullet>
  + getScore(): int
  + update(int power): void
}

class MobEnemy{
  - score: int

  + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp,int shootNum,int power,int direction,int bulletspeed)
  + forward(): void
  + shoot(): List<BaseBullet>
  + getScore(): int
  + update(int power): void
}


interface EnemyAircraftCreator{
    +Create():AbstractEnemyAircraft
}
class BossAircraftCreator{
    +Create():Boss
}
class EliteAircraftCreator{
    +Create():EliteEnemy
}
class ElitePlusAircraftCreator{
    +Create():ElitePlus
}
class MobAircraftCreator{
    +Create():MobEnemy
}

EnemyAircraftCreator <|.. BossAircraftCreator
EnemyAircraftCreator <|.. EliteAircraftCreator
EnemyAircraftCreator <|.. ElitePlusAircraftCreator
EnemyAircraftCreator <|.. MobAircraftCreator

AbstractEnemyAircraft <|-- Boss
AbstractEnemyAircraft <|-- EliteEnemy
AbstractEnemyAircraft <|-- ElitePlus
AbstractEnemyAircraft <|-- MobEnemy

BossAircraftCreator --> Boss
EliteAircraftCreator --> EliteEnemy
ElitePlusAircraftCreator --> ElitePlus
MobAircraftCreator --> MobEnemy


class ArcBulletProp{
    + ArcBulletProp(int locationX, int locationY, int speedX, int speedY)
    + valid():void
}
abstract class BaseProp{
    + BaseProp(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + {abstract} valid():void
    + getSupplyMusic():void
}
class BloodProp{
    + BloodProp(int locationX, int locationY, int speedX, int speedY)
    + valid():void
}
class BombProp{
    + BombProp(int locationX, int locationY, int speedX, int speedY)
    + valid():void
}

class CircleBulletProp{
    + CircleBulletProp(int locationX, int locationY, int speedX, int speedY)
    + valid():void
}



class ArcBulletPropCreator{
    + Create(int locationX,int locationY,int propSpeedX,int propSpeedY)
}
class BloodPropCreator{
    + Create(int locationX,int locationY,int propSpeedX,int propSpeedY)
}
class BombPropCreator{
    + Create(int locationX,int locationY,int propSpeedX,int propSpeedY)
}
class CircleBulletPropCreator{
    + Create(int locationX,int locationY,int propSpeedX,int propSpeedY)
}
interface PropCreator{
    + Create(int locationX,int locationY,int propSpeedX,int propSpeedY)
}


PropCreator <|.. ArcBulletPropCreator
PropCreator <|.. BloodPropCreator
PropCreator <|.. BombPropCreator
PropCreator <|.. CircleBulletPropCreator

BaseProp <|-- ArcBulletProp
BaseProp <|-- BloodProp
BaseProp <|-- BombProp
BaseProp <|-- CircleBulletProp

ArcBulletPropCreator --> ArcBulletProp
BloodPropCreator --> BloodProp
BombPropCreator --> BombProp
CircleBulletPropCreator --> CircleBulletProp






@enduml